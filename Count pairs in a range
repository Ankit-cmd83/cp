#pragma GCC optimize("O3,unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#define fastIO() do { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); } while(0)
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define umpii unordered_map<int, int>
#define umpll unordered_map<ll, ll>
#define umsii unordered_set<int>
#define mp make_pair
#define pii pair<int,int>
#define vvi vector<vi>
#define vvll vector<vll>
#define pll pair<ll,ll>
#define psb push_back
#define pop pop_back
#define all(x) (x).begin(), (x).end()
#define per(x) next_permutation(all(x))
#define f first
#define s second
#define ln "\n"
#define mod (int)(1e9+7)
//---------------------DEBUGGING----------------//
#ifndef ONLINE_JUDGE
#define debug(x) cerr<<#x<<"=";_print(x);cerr<< endl;
#else
#define debug(x)
#endif
void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(float t) {cerr << t;}
void _print(double t) {cerr << t;}
template<typename T>void _print(const vector<T> &x){
    cerr<<'[';
   for(size_t i=0;i<x.size();++i){
    _print(x[i]);
    if(i!=x.size()-1)cerr<<",";
    }
    cerr<<']';
}
//---------------------SOLUTION-----------------//


int main() {
    fastIO(); 
    int t;
    cin>>t;
    while(t--){
     int n;
     ll x,y;
     cin>>n>>x>>y;
    vi v(n);
    for(auto &x:v)cin>>x;
    ll sum=accumulate(all(v),0LL);
    ll ans=0;
    ll left=sum-y;
    ll right=sum-x;
    sort(all(v));
    for(int i=0;i<n;i++){
      ll m=left-v[i];
      ll n=right-v[i];
    int index1=lower_bound(v.begin()+i+1,v.end(),m)-v.begin();
    int index2=upper_bound(v.begin()+i+1,v.end(),n)-v.begin();
     ans+=(index2-index1);
    } 
    cout<<ans<<ln;
}
}
